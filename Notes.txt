demoapps.qspiders.com.

Day 1

React is Liberary of JavaScript.

Why We use React : Application is fast, single page Application, (Having only one html page to build complete Application).
                    Ex : Instagram, FaceBook, GitHub


This is the process of passing the value between the JS File
let phone = "IPhone";
 export default phone;

import phone from "./India.js"
console.log(phone);



Scenario 1  : 
we must write the same name of resourse in export.
let phone = () =>{
    console.log("IPhone");
}
export default phone;


we can write the any name / Rename of resourse in import.
import Lava from "./India.js"
Lava();




Scenario 2  : 
We can pass the function , array, value, and anything 

we can not pass multiple value by : export default phone , Laptop;  
So we need to array or object to pass multiple export
2.1 Passing value by Array

let phone = () =>{
    console.log("IPhone");
}
let Laptop = "AsusX515"
export default [phone, Laptop];


import Resourse from "./India.js"
let [phone, Laptop] = Resourse;
console.log(Laptop);
phone();


2.2 Passing value By Object

let resourse1 = "Weapons"
let resourse2 = "Cruid Oil"

let obj = {
    resourse1,
    resourse2,
    func : ()=>{
        console.log("Function");        
    }
}
export default obj;


import India_Resourse from "./India.js"
let {resourse1, resourse2, func} = India_Resourse
console.log(resourse2);
func();                                                             



---------------------------------------------------------------------------------------------------------------------------------

Day 3

Q1. what is the advantages andd DisAdvantages of React.
advantages : 1. Application become very faster and smooth
             2. Reduce the line of code to achieve code redundancy.
             3. Faster development 
             4. Easy to maintain
             5. Application become lightweight.

DisAdvantages : 1. We cannot achieve 100% SEO using SAP -> because it has only one html fie which can load the meta only once
                2. Application become costly because we need trained developers.



Q2. Difference between Single Page Application  and multiple page Application.



History : 
1. Angular FrameWork Found by Google in 2009. It is based on MVC architecture. It is Supporting JavaScript and TypeScript.

2. React Liberary Found by FaceBook in 2011. It is based on Component base architecture. It is Supporting JavaScript and TypeScript. 
    2011 -> Instagram
    2012 -> FaceBook
    2013 -> Launched

3. Vue FrameWork Found by Evan you in 2014. it is based on Component based architecture. It is Supporting TypeScript and JavaScript.

4. Angular2 FrameWork Found by Google in 2016. it is based on Component based architecture. It is Supporting only TypeScript.




Q3. what is diffing Algorithm : It is the process of finding the Difference between Real DOM And Virtual DOM.
Q4. What is Reconciliation  : Implementing the changes in Real DOM, that found during the Diffing Algorithm Virtual DOM.
Q5. What is react fiber :  React fiber is the react engine that handle all the internal working with the react like diffing Algorithm, Reconciliation and lot many things













---------------------------------------------------------------------------------------------------------------------------------

Day 7

Component : Component is the reuseable block of code which is used to perform specific task.
            A Component represents single function or a class.
            A Component name should always start with UpperCase character.
            We can return jsx from an Component and that jsx is return to the caller.
            We can have multiple Components inside single module. But it is recommended to have only one.
            Component are divided into two types : 1. Function based Components.  2.Class based Component.


Module : Module is the single JSX file.
         JS or JSX file will become a module only when we have mentioned type = "module"
         We can achieve the import and export between the modules and only.
         In React we create the module with .js and .jsx extension. In one module we can have multiple Component. 
         
State : any update operation you have to perform that only possible through state

Q. Difference between Function based Component and class based Component

Class base Component : 
1. We use class for creating CBC
2. The class extends Component and it has render method means each CBC must have render method.
3. It has inbuild state Object and setState() method 
4. We dont have any Hooks with CBC
5. It has life-cycle method(ComponentDidMount, ComponentDidUpdate, ComponentWillUnmount)
6. Difficult to Maintain.

Function based Component :
1. We use function for creating FBC.
2. FBC doesnot extends any Component and no need to write render method wich Component. We will use render method main.jsx file only 
3. It doesnot having inbuild state and setState() method. To manage the state we have to take the help of state management reDux/ toolKit or Hooks like useState, useReducers
4. We have Hooks with FBC (useState, useReducers, useCallBack, useParam)
5. It not have any inbuild life-cycle method but we can achieve them using UseEffectHook
6. Easy to Maintain.



import { Component } from "react";
import Navbar from "./Component/Navbar";
import Aside from "./Component/Aside";
import MainBody from "./Component/MainBody";
import Footer from "./Component/Footer";
import Count from "./Day7/Count";



// class App extends Component{
//   constructor()
//   {
//     super();
//   }
//   render(){
//     return(
//       <div>
//         <Navbar/>
//         <div id ="mainBody">
//           <Aside/>
//           <MainBody/>
//           </div>
//         <Footer />  
//       </div>
//   )
//   }
// }



class Day7 extends Component{
  constructor(){
    super();
    
  }
  render(){
    return(
     <Count/>
    )
  }
}

export default Day7;
import { Component } from "react";

class Count extends Component{
     constructor(){
    super();
    this.state = {
      cartItem : 0
    };
  }

  render(){
    return(
      <div>
      <h1>{this.state.cartItem}</h1>
      <button onClick={()=>{
        this.setState({cartItem : this.state.cartItem +=1})
      }}>Like</button>
      </div>
    )
  }
}

export default Count;




---------------------------------------------------------------------------------------------------------------------------------

Day 8

JSX Intro

file structure >> JSXIntro >  Task1.jsx -> JSXIntro.jsx -> App.jsx -> main.jsx

JSX (JavaScript XML)
Rules : 1. You can return only one jsx element at a time which can have n no of nested element.
        2. JSX element always writtern in lowercase (UpperCase consider as Component)
        3. You dont have to pass wrong descendents to any element. eg.  div is not allowed inside p tag.
        4. All jsx element must be closed even it is paired or unpaired tag.
        5. We have some alternative names for some attributes like 
              1. class => className
              2. for => htmlFor
        6. We can use jsx expression `{}` for writing JS code inside jsx.
              1. we can write only ternary opertor as an conditional statement.
              2. we can write only the HOF(Looping statement) that can return anything eg. map/filter/Reduce etc. 
                    we can use forEach but it is not recommended because it cannot return anything.
        7. We can use react fragment to avoid extra nodes in jsx.

        8. Releated Rule no 1. : We can use react fragment to avoid extra nodes in Dom Tree.
              You can keep empty fragment only when key attribute is not required.
              EX :  return(
                //Day 8
                <Fragment>
                  <div>
                    <JSXIntro/>
                  </div>
                </Fragment>
                )

          







---------------------------------------------------------------------------------------------------------------------------------

Day 9

State
Hooks : It is just inbuild function which come with react.
